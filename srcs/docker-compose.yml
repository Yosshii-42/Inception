
services:
  mariadb:
    build: ./requirements/mariadb
    container_name: mariadb
    image: yotsurud/mariadb:1.0
    pull_policy: never
    env_file: .env
    environment:
      MARIADB_DATABASE: wordpress
      MARIADB_USER: wpuser 
      MARIADB_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
      MARIADB_PASSWORD_FILE: /run/secrets/mysql_app_password
    volumes:
      - db_data:/var/lib/mysql
    networks: [inception]
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin --protocol=socket -uroot -p\"$(tr -d '\\n' </run/secrets/mysql_root_password)\" ping --silent"]
      interval: 5s
      timeout: 3s
      retries: 30
      start_period: 5s
    secrets:
      - mysql_root_password
      - mysql_app_password

  wordpress:
    build: ./requirements/wordpress
    container_name: wordpress
    image: yotsurud/wordpress:1.0
    pull_policy: never
    env_file: .env
    environment:
      WORDPRESS_DB_HOST: mariadb:3306
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_DB_USER: wpuser
      WORDPRESS_DB_PASSWORD_FILE: /run/secrets/mysql_app_password
      PUBLIC_SCHEME: https
      PUBLIC_HOST: yotsurud.42.fr
      PUBLIC_PORT: ""
      WP_ADMIN_PASSWORD_FILE: /run/secrets/wp_user1_password
      WP_USER2_PASSWORD_FILE: /run/secrets/wp_user2_password
    depends_on:
      mariadb:
        condition: service_healthy
    volumes:
      - wp_data:/var/www/html
    networks: [inception]
    restart: unless-stopped
    expose:
      - "9000"
    healthcheck:
      test: ["CMD-SHELL", "wp core is-installed --allow-root >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 30s
    secrets:
      - wp_user1_password
      - wp_user2_password
      - mysql_app_password

  nginx:
    build: ./requirements/nginx
    container_name: nginx
    image: yotsurud/nginx:1.0
    pull_policy: never
    depends_on: [wordpress]
    ports:
      - "443:443"
    volumes:
      - wp_data:/var/www/html:ro
    networks: [inception]
    restart: unless-stopped

volumes:
  db_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/yotsurud/data/db
  wp_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/yotsurud/data/wp

networks:
  inception:
    name: srcs_inception
    driver: bridge

secrets:
  mysql_root_password:
    file: ../secrets/mysql_root_password.txt
  mysql_app_password:
    file: ../secrets/mysql_app_password.txt
  wp_user1_password:
    file: ../secrets/wp_user1_password.txt
  wp_user2_password:
    file: ../secrets/wp_user2_password.txt

# 3つとも同じ bridge ネットワーク srcs_inception 上
# wordpress ↔ mariadb は WORDPRESS_DB_HOST: mariadb:3306 で接続
# nginx → wordpress はコンテナ内ポート 9000（php-fpm）へ
#  expose: "9000" で内部開放、外へは出さない
# named volume + bind 方式で実体を /home/yotsurud/data/ 配下に固定
#  db_data → /home/yotsurud/data/db を MariaDB の /var/lib/mysql に
#  wp_data → /home/yotsurud/data/wp を WordPress の /var/www/html に
#  nginx も wp_data を read-only で参照
# これで コンテナ停止中でも ホストから中身を見たり編集できる
# depends_on + healthcheck
#  mariadb が mysqladmin … ping で healthy になってから wordpress 起動
#  wordpress は wp core is-installed でヘルス確認
# 全サービス restart: unless-stopped（手で止めない限り再起動）
# 環境変数のうちパスワードは *_FILE で Docker secrets のファイルを読む設計
#  secrets: セクションで ../secrets/*.txt を割り当て
# 各サービス build: ./requirements/... からイメージ作成し、同名タグ（例 yotsurud/wordpress:1.0）を付与
# 外部公開は nginx の 443 だけ（ports: "443:443"）。HTTPは開けていない